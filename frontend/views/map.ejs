<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mapa de Ubicaciones - Ecomerse-Soft</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="/css/map.css">
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
</head>
<body>
  <!-- Header -->
  <header>
    <nav class="navbar navbar-expand-lg navbar-light">
      <div class="container">
        <!-- Logo y nombre del sitio -->
        <a class="navbar-brand d-flex align-items-center" href="/panel">
          <img src="/images/logo.webp" alt="Ecomerse-Soft" style="height: 50px; width: auto; margin-right: 10px;">
          <span class="fw-bold">Ecomerse-Soft</span>
        </a>
        <!-- Opciones de usuario alineadas a la derecha con espacio entre ellas -->
        <div class="d-flex">
          <a href="/profile" class="btn btn-outline-success me-3">
            <i class="fas fa-user-circle"></i> Perfil
          </a>
          <a href="/panel" class="btn btn-outline-success">
            <i class="fas fa-th-large"></i> Panel
          </a>
        </div>
      </div>
    </nav>
  </header>

  <!-- Contenido Principal -->
  <div class="container my-4">
    <h1 class="text-center">Mapa de Ubicaciones Registradas</h1>
    <div class="position-relative">
      <div id="map"></div>
      <!-- Controles del Mapa -->
      <div class="map-controls">
        <button class="btn" onclick="getUserLocation()"><i class="fas fa-crosshairs"></i> Mi Ubicación</button>
        <button class="btn" onclick="loadLocations()"><i class="fas fa-sync-alt"></i> Cargar Ubicaciones</button>
      </div>
    </div>
  </div>

  <!-- Footer -->
  <footer class="text-center py-3">
    <p>&copy; 2024 Ecomerse-Soft. Todos los derechos reservados.</p>
  </footer>

  <script>
    // Crear mapa centrado en coordenadas iniciales (coordenadas de ejemplo)
    const map = L.map('map').setView([10.987654, -74.56789], 13);

    // Agregar capa de mapas de OpenStreetMap
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      maxZoom: 19,
    }).addTo(map);

    // Crear un icono personalizado
    const customIcon = L.icon({
      iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',
      iconSize: [25, 41],
      iconAnchor: [12, 41],
      popupAnchor: [1, -34],
      shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',
      shadowSize: [41, 41]
    });

    // Función para obtener la ubicación del usuario
    function getUserLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          function (position) {
            const { latitude, longitude } = position.coords;

            // Centrar el mapa en la ubicación actual del usuario
            map.setView([latitude, longitude], 13);

            // Agregar un marcador para la ubicación actual
            L.marker([latitude, longitude], { icon: customIcon })
              .addTo(map)
              .bindTooltip('<strong>Tu ubicación actual</strong>', { permanent: true, direction: 'top' })
              .openTooltip();
          },
          function (error) {
            console.error('Error obteniendo la ubicación:', error);
            alert('No se pudo obtener tu ubicación. Por favor, verifica los permisos de tu navegador.');
          }
        );
      } else {
        alert('La geolocalización no está soportada en este navegador.');
      }
    }

    // Agregar ubicaciones específicas manualmente
    function addSpecificLocations() {
      const locations = [
        { coordinates: [10.987654, -74.56789], name: 'Punto de Interés 1' },
        { coordinates: [10.993456, -74.573212], name: 'Punto de Interés 2' },
        { coordinates: [10.980123, -74.560789], name: 'Punto de Interés 3' },
        { coordinates: [9.720798001483569, -75.11774117531608], name: 'Universidad de Cartagena' }
      ];

      locations.forEach((location) => {
        const { coordinates, name } = location;

        // Agregar marcador al mapa con el icono personalizado y mostrar el nombre permanentemente
        L.marker([coordinates[0], coordinates[1]], { icon: customIcon })
          .addTo(map)
          .bindTooltip(`<strong>${name}</strong>`, { permanent: true, direction: 'top' });
      });
    }

    // Cargar ubicaciones registradas desde el backend
    async function loadLocations() {
      try {
        const response = await fetch('/api/locations'); // Cambia esta ruta si es necesario
        if (!response.ok) {
          throw new Error('Error al obtener las ubicaciones: ' + response.statusText);
        }
        const data = await response.json();

        if (data.locations && Array.isArray(data.locations)) {
          data.locations.forEach((location) => {
            const { coordinates, name } = location;

            if (coordinates && coordinates.length === 2) {
              L.marker([coordinates[1], coordinates[0]], { icon: customIcon }) // [latitud, longitud]
                .addTo(map)
                .bindTooltip(`<strong>${name}</strong>`, { permanent: true, direction: 'top' });
            } else {
              console.warn('Ubicación con coordenadas inválidas:', location);
            }
          });
        } else {
          console.warn('Datos de ubicaciones en formato inesperado:', data);
        }
      } catch (error) {
        console.error('Error al cargar ubicaciones:', error);
      }
    }

    // Inicializar el mapa
    addSpecificLocations(); // Agregar ubicaciones específicas manualmente
  </script>
</body>
</html>
